{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/erictse/Downloads/React-nuxt-lecture-23/code/06-onwards-to-a-bigger-project-starting-project/pages/[abc]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction def(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: props.Name2.image,\n    title: props.Name2.title,\n    address: props.Name2.address,\n    description: props.Name2.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n}\n\nexport default def; // for dynamic route[abc]\n\nexport async function getStaticPaths() {\n  const getDatabase = await MongoClient.connect('mongodb+srv://Eric:123@cluster0.m95pz.mongodb.net/changehere?retryWrites=true&w=majority'); //return a promise\n\n  const db = getDatabase.db();\n  const databasename = db.collection('changehere');\n  const documentsofArray = await databasename.find({}, {\n    _id: 1\n  }).toArray(); // const meetups = await meetupsCollection.find({}, {}).toArray(); //find --> get all docs, find({},{}),first {} for filter, second, for {}item\n  //1 include only 1//toArray convert object to array\n\n  return {\n    fallback: 'blocking',\n    paths: [documentsofArray.map(a => ({\n      params: {\n        abc: a._id.toString()\n      }\n    }))] // paths: [{ params: { abc: 'm1' } }, { params: { abc: 'm2' } }]\n\n  };\n}\nexport async function getStaticProps(context) {\n  const getDatabase = await MongoClient.connect('mongodb+srv://Eric:123@cluster0.m95pz.mongodb.net/changehere?retryWrites=true&w=majority'); //return a promise\n\n  const db = getDatabase.db();\n  const databasename = db.collection('changehere');\n  const theParams = context.params.abc;\n  const theData = await databasename.findOne({\n    _id: ObjectId(theParams) //theParams aldy string from link\n\n  });\n  getDatabase.close();\n  return {\n    props: {\n      Name2: {\n        id: theData.toString(),\n        title: theData.title,\n        address: theData.address,\n        image: theData.image,\n        description: theData.description\n      }\n    },\n    revalidate: 1\n  };\n}","map":{"version":3,"sources":["/Users/erictse/Downloads/React-nuxt-lecture-23/code/06-onwards-to-a-bigger-project-starting-project/pages/[abc]/index.js"],"names":["MeetupDetail","def","props","Name2","image","title","address","description","getStaticPaths","getDatabase","MongoClient","connect","db","databasename","collection","documentsofArray","find","_id","toArray","fallback","paths","map","a","params","abc","toString","getStaticProps","context","theParams","theData","findOne","ObjectId","close","id","revalidate"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACnB,sBACC,QAAC,YAAD;AACC,IAAA,GAAG,EAAEA,KAAK,CAACC,KAAN,CAAYC,KADlB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,KAAN,CAAYE,KAFpB;AAGC,IAAA,OAAO,EAAEH,KAAK,CAACC,KAAN,CAAYG,OAHtB;AAIC,IAAA,WAAW,EAAEJ,KAAK,CAACC,KAAN,CAAYI;AAJ1B;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;AAED,eAAeN,GAAf,C,CAEA;;AACA,OAAO,eAAeO,cAAf,GAAgC;AACtC,QAAMC,WAAW,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACzB,0FADyB,CAA1B,CADsC,CAGnC;;AAEH,QAAMC,EAAE,GAAGH,WAAW,CAACG,EAAZ,EAAX;AAEA,QAAMC,YAAY,GAAGD,EAAE,CAACE,UAAH,CAAc,YAAd,CAArB;AACA,QAAMC,gBAAgB,GAAG,MAAMF,YAAY,CAACG,IAAb,CAAkB,EAAlB,EAAsB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAtB,EAAkCC,OAAlC,EAA/B,CARsC,CAStC;AACA;;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,KAAK,EAAE,CACNL,gBAAgB,CAACM,GAAjB,CAAsBC,CAAD,KAAQ;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEF,CAAC,CAACL,GAAF,CAAMQ,QAAN;AAAP;AAAV,KAAR,CAArB,CADM,CAFD,CAKN;;AALM,GAAP;AAOA;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,QAAMlB,WAAW,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACzB,0FADyB,CAA1B,CAD6C,CAG1C;;AAEH,QAAMC,EAAE,GAAGH,WAAW,CAACG,EAAZ,EAAX;AAEA,QAAMC,YAAY,GAAGD,EAAE,CAACE,UAAH,CAAc,YAAd,CAArB;AAEA,QAAMc,SAAS,GAAGD,OAAO,CAACJ,MAAR,CAAeC,GAAjC;AAEA,QAAMK,OAAO,GAAG,MAAMhB,YAAY,CAACiB,OAAb,CAAqB;AAC1Cb,IAAAA,GAAG,EAAEc,QAAQ,CAACH,SAAD,CAD6B,CACjB;;AADiB,GAArB,CAAtB;AAIAnB,EAAAA,WAAW,CAACuB,KAAZ;AAEA,SAAO;AACN9B,IAAAA,KAAK,EAAE;AACNC,MAAAA,KAAK,EAAE;AACN8B,QAAAA,EAAE,EAAEJ,OAAO,CAACJ,QAAR,EADE;AAENpB,QAAAA,KAAK,EAAEwB,OAAO,CAACxB,KAFT;AAGNC,QAAAA,OAAO,EAAEuB,OAAO,CAACvB,OAHX;AAINF,QAAAA,KAAK,EAAEyB,OAAO,CAACzB,KAJT;AAKNG,QAAAA,WAAW,EAAEsB,OAAO,CAACtB;AALf;AADD,KADD;AAUN2B,IAAAA,UAAU,EAAE;AAVN,GAAP;AAYA","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction def(props) {\n\treturn (\n\t\t<MeetupDetail\n\t\t\timg={props.Name2.image}\n\t\t\ttitle={props.Name2.title}\n\t\t\taddress={props.Name2.address}\n\t\t\tdescription={props.Name2.description}\n\t\t/>\n\t);\n}\n\nexport default def;\n\n// for dynamic route[abc]\nexport async function getStaticPaths() {\n\tconst getDatabase = await MongoClient.connect(\n\t\t'mongodb+srv://Eric:123@cluster0.m95pz.mongodb.net/changehere?retryWrites=true&w=majority'\n\t); //return a promise\n\n\tconst db = getDatabase.db();\n\n\tconst databasename = db.collection('changehere');\n\tconst documentsofArray = await databasename.find({}, { _id: 1 }).toArray();\n\t// const meetups = await meetupsCollection.find({}, {}).toArray(); //find --> get all docs, find({},{}),first {} for filter, second, for {}item\n\t//1 include only 1//toArray convert object to array\n\n\treturn {\n\t\tfallback: 'blocking',\n\t\tpaths: [\n\t\t\tdocumentsofArray.map((a) => ({ params: { abc: a._id.toString() } }))\n\t\t]\n\t\t// paths: [{ params: { abc: 'm1' } }, { params: { abc: 'm2' } }]\n\t};\n}\nexport async function getStaticProps(context) {\n\tconst getDatabase = await MongoClient.connect(\n\t\t'mongodb+srv://Eric:123@cluster0.m95pz.mongodb.net/changehere?retryWrites=true&w=majority'\n\t); //return a promise\n\n\tconst db = getDatabase.db();\n\n\tconst databasename = db.collection('changehere');\n\n\tconst theParams = context.params.abc;\n\n\tconst theData = await databasename.findOne({\n\t\t_id: ObjectId(theParams) //theParams aldy string from link\n\t});\n\n\tgetDatabase.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tName2: {\n\t\t\t\tid: theData.toString(),\n\t\t\t\ttitle: theData.title,\n\t\t\t\taddress: theData.address,\n\t\t\t\timage: theData.image,\n\t\t\t\tdescription: theData.description\n\t\t\t}\n\t\t},\n\t\trevalidate: 1\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}