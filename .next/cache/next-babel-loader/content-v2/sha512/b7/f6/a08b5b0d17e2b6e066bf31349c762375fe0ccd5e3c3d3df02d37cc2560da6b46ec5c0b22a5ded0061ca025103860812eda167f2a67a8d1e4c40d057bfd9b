{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/erictse/Downloads/React-nuxt-lecture-23/code/06-onwards-to-a-bigger-project-starting-project/pages/[abc]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction def(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: props.Name2.image,\n    title: props.Name2.title,\n    address: props.Name2.address,\n    description: props.Name2.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n}\n\nexport var __N_SSG = true;\nexport default def; // for dynamic route[abc]","map":{"version":3,"sources":["/Users/erictse/Downloads/React-nuxt-lecture-23/code/06-onwards-to-a-bigger-project-starting-project/pages/[abc]/index.js"],"names":["MeetupDetail","def","props","Name2","image","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACnB,sBACC,QAAC,YAAD;AACC,IAAA,GAAG,EAAEA,KAAK,CAACC,KAAN,CAAYC,KADlB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,KAAN,CAAYE,KAFpB;AAGC,IAAA,OAAO,EAAEH,KAAK,CAACC,KAAN,CAAYG,OAHtB;AAIC,IAAA,WAAW,EAAEJ,KAAK,CAACC,KAAN,CAAYI;AAJ1B;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;;AAED,eAAeN,GAAf,C,CAEA","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction def(props) {\n\treturn (\n\t\t<MeetupDetail\n\t\t\timg={props.Name2.image}\n\t\t\ttitle={props.Name2.title}\n\t\t\taddress={props.Name2.address}\n\t\t\tdescription={props.Name2.description}\n\t\t/>\n\t);\n}\n\nexport default def;\n\n// for dynamic route[abc]\nexport async function getStaticPaths() {\n\tconst getDatabase = await MongoClient.connect(\n\t\t'mongodb+srv://Eric:123@cluster0.m95pz.mongodb.net/changehere?retryWrites=true&w=majority'\n\t); //return a promise\n\n\tconst db = getDatabase.db();\n\n\tconst databasename = db.collection('changehere');\n\tconst documentsofArray = await databasename.find({}, { _id: 1 }).toArray();\n\t// const meetups = await meetupsCollection.find({}, {}).toArray(); //find --> get all docs, find({},{}),first {} for filter, second, for {}item\n\t//1 include only 1//toArray convert object to array\n\n\treturn {\n\t\tfallback: 'blocking',\n\t\tpaths: [\n\t\t\tdocumentsofArray.map((a) => ({ params: { abc: a._id.toString() } }))\n\t\t]\n\t\t// paths: [{ params: { abc: 'm1' } }, { params: { abc: 'm2' } }]\n\t};\n}\nexport async function getStaticProps(context) {\n\tconst getDatabase = await MongoClient.connect(\n\t\t'mongodb+srv://Eric:123@cluster0.m95pz.mongodb.net/changehere?retryWrites=true&w=majority'\n\t); //return a promise\n\n\tconst db = getDatabase.db();\n\n\tconst databasename = db.collection('changehere');\n\n\tconst theParams = context.params.abc;\n\n\tconst theData = await databasename.findOne({\n\t\t_id: ObjectId(theParams) //theParams aldy string from link\n\t});\n\n\tgetDatabase.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tName2: {\n\t\t\t\tid: theData.toString(),\n\t\t\t\ttitle: theData.title,\n\t\t\t\taddress: theData.address,\n\t\t\t\timage: theData.image,\n\t\t\t\tdescription: theData.description\n\t\t\t}\n\t\t},\n\t\trevalidate: 1\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}