{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/erictse/Downloads/React-nuxt-lecture-23/code/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nconst dummy = [{\n  id: 'm1',\n  title: 'good place',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'No.141-143 kau pui lung',\n  description: 'first to meet'\n}, {\n  id: 'm2',\n  title: 'bad place',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Hong Kong',\n  description: 'first to meet'\n}];\n\nfunction HomePage() {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.Name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\nexport default HomePage; // export async function getServerSideProps(context) {\n// \tconst req = context.req;\n// \tconst res = context.res;\n// \t// fetch data from an API\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS\n// \t\t}\n// \t};\n// }\n// export async function getStaticProps() {\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS\n// \t\t},\n// \t\trevalidate: 1\n// \t};\n// }\n\nexport async function getStaticProps() {\n  const getDatabase = await MongoClient.connect('mongodb+srv://Eric:123@cluster0.m95pz.mongodb.net/changehere?retryWrites=true&w=majority'); //return a promise\n\n  const db = getDatabase.db();\n  const databasename = db.collection('changehere');\n  const documentsofArray = await databasename.find().toArray();\n  client.close();\n  return {\n    props: {\n      Name: documentsofArray.map(a => ({\n        id: a._id.toString(),\n        title: a.title,\n        address: a.address,\n        image: a.image\n      }))\n    },\n    revalidate: 1\n  };\n}","map":{"version":3,"sources":["/Users/erictse/Downloads/React-nuxt-lecture-23/code/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","MongoClient","dummy","id","title","image","address","description","HomePage","props","Name","getStaticProps","getDatabase","connect","db","databasename","collection","documentsofArray","find","toArray","client","close","map","a","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,KAAK,GAAG,CACb;AACCC,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,YAFR;AAGCC,EAAAA,KAAK,EACJ,wHAJF;AAKCC,EAAAA,OAAO,EAAE,yBALV;AAMCC,EAAAA,WAAW,EAAE;AANd,CADa,EAUb;AACCJ,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,WAFR;AAGCC,EAAAA,KAAK,EACJ,wHAJF;AAKCC,EAAAA,OAAO,EAAE,WALV;AAMCC,EAAAA,WAAW,EAAE;AANd,CAVa,CAAd;;AAoBA,SAASC,QAAT,GAAoB;AACnB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEC,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AAED,eAAeF,QAAf,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeG,cAAf,GAAgC;AACtC,QAAMC,WAAW,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACzB,0FADyB,CAA1B,CADsC,CAGnC;;AAEH,QAAMC,EAAE,GAAGF,WAAW,CAACE,EAAZ,EAAX;AAEA,QAAMC,YAAY,GAAGD,EAAE,CAACE,UAAH,CAAc,YAAd,CAArB;AAEA,QAAMC,gBAAgB,GAAG,MAAMF,YAAY,CAACG,IAAb,GAAoBC,OAApB,EAA/B;AAEAC,EAAAA,MAAM,CAACC,KAAP;AAEA,SAAO;AACNZ,IAAAA,KAAK,EAAE;AACNC,MAAAA,IAAI,EAAEO,gBAAgB,CAACK,GAAjB,CAAsBC,CAAD,KAAQ;AAClCpB,QAAAA,EAAE,EAAEoB,CAAC,CAACC,GAAF,CAAMC,QAAN,EAD8B;AAElCrB,QAAAA,KAAK,EAAEmB,CAAC,CAACnB,KAFyB;AAGlCE,QAAAA,OAAO,EAAEiB,CAAC,CAACjB,OAHuB;AAIlCD,QAAAA,KAAK,EAAEkB,CAAC,CAAClB;AAJyB,OAAR,CAArB;AADA,KADD;AASNqB,IAAAA,UAAU,EAAE;AATN,GAAP;AAWA","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\n\nconst dummy = [\n\t{\n\t\tid: 'm1',\n\t\ttitle: 'good place',\n\t\timage:\n\t\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n\t\taddress: 'No.141-143 kau pui lung',\n\t\tdescription: 'first to meet'\n\t},\n\n\t{\n\t\tid: 'm2',\n\t\ttitle: 'bad place',\n\t\timage:\n\t\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n\t\taddress: 'Hong Kong',\n\t\tdescription: 'first to meet'\n\t}\n];\n\nfunction HomePage() {\n\treturn <MeetupList meetups={props.Name} />;\n}\n\nexport default HomePage;\n\n// export async function getServerSideProps(context) {\n// \tconst req = context.req;\n// \tconst res = context.res;\n\n// \t// fetch data from an API\n\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS\n// \t\t}\n// \t};\n// }\n\n// export async function getStaticProps() {\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS\n// \t\t},\n// \t\trevalidate: 1\n// \t};\n// }\n\nexport async function getStaticProps() {\n\tconst getDatabase = await MongoClient.connect(\n\t\t'mongodb+srv://Eric:123@cluster0.m95pz.mongodb.net/changehere?retryWrites=true&w=majority'\n\t); //return a promise\n\n\tconst db = getDatabase.db();\n\n\tconst databasename = db.collection('changehere');\n\n\tconst documentsofArray = await databasename.find().toArray();\n\n\tclient.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tName: documentsofArray.map((a) => ({\n\t\t\t\tid: a._id.toString(),\n\t\t\t\ttitle: a.title,\n\t\t\t\taddress: a.address,\n\t\t\t\timage: a.image\n\t\t\t}))\n\t\t},\n\t\trevalidate: 1\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}