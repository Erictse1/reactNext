{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n  if (req.method === post) {\n    const data = req.body; // const { id, title, address, description } = data;\n\n    const getClient = await MongoClient.connect('mongodb+srv://Eric:123@cluster0.m95pz.mongodb.net/changehere?retryWrites=true&w=majority'); //return a promise\n\n    const db = getClient.db();\n    const databasename = db.collection('changehere');\n    const result = await databasename.insertOne(data);\n    console.log(result);\n    client.close(); //return promise\n    // const selectedMeetup = await meetupsCollection.findOne({\n    // \t_id: ObjectId(databasename)\n    // });\n    // client.close();\n    //upperpart for connect database\n\n    res.status(201).json({\n      message: 'message'\n    });\n  }\n\n  return {\n    props: {}\n  };\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/erictse/Downloads/React-nuxt-lecture-23/code/06-onwards-to-a-bigger-project-starting-project/pages/api/apirouter.js"],"names":["MongoClient","handler","req","res","method","post","data","body","getClient","connect","db","databasename","collection","result","insertOne","console","log","client","close","status","json","message","props"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAChC,MAAID,GAAG,CAACE,MAAJ,KAAeC,IAAnB,EAAyB;AACxB,UAAMC,IAAI,GAAGJ,GAAG,CAACK,IAAjB,CADwB,CAGxB;;AAEA,UAAMC,SAAS,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACvB,0FADuB,CAAxB,CALwB,CAOrB;;AAEH,UAAMC,EAAE,GAAGF,SAAS,CAACE,EAAV,EAAX;AAEA,UAAMC,YAAY,GAAGD,EAAE,CAACE,UAAH,CAAc,YAAd,CAArB;AAEA,UAAMC,MAAM,GAAG,MAAMF,YAAY,CAACG,SAAb,CAAuBR,IAAvB,CAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAI,IAAAA,MAAM,CAACC,KAAP,GAfwB,CAgBxB;AAEA;AACA;AACA;AAEA;AACA;;AACAf,IAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACA;;AAED,SAAO;AACNC,IAAAA,KAAK,EAAE;AADD,GAAP;AAGA;;AAED,eAAerB,OAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n\tif (req.method === post) {\n\t\tconst data = req.body;\n\n\t\t// const { id, title, address, description } = data;\n\n\t\tconst getClient = await MongoClient.connect(\n\t\t\t'mongodb+srv://Eric:123@cluster0.m95pz.mongodb.net/changehere?retryWrites=true&w=majority'\n\t\t); //return a promise\n\n\t\tconst db = getClient.db();\n\n\t\tconst databasename = db.collection('changehere');\n\n\t\tconst result = await databasename.insertOne(data);\n\t\tconsole.log(result);\n\t\tclient.close();\n\t\t//return promise\n\n\t\t// const selectedMeetup = await meetupsCollection.findOne({\n\t\t// \t_id: ObjectId(databasename)\n\t\t// });\n\n\t\t// client.close();\n\t\t//upperpart for connect database\n\t\tres.status(201).json({ message: 'message' });\n\t}\n\n\treturn {\n\t\tprops: {}\n\t};\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}